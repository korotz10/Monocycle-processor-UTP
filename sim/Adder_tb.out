#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_000001ca8c56b2e0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_000001ca8c568850 .scope module, "Adder_tb" "Adder_tb" 3 1;
 .timescale 0 0;
v000001ca8c5689e0_0 .var/i "errors", 31 0;
v000001ca8c57c150_0 .var/s "pc_in", 31 0;
v000001ca8c57c1f0_0 .net/s "pc_out", 31 0, L_000001ca8c56e9c0;  1 drivers
v000001ca8c56e920_0 .var/i "tests", 31 0;
S_000001ca8c57be30 .scope task, "check_result" "check_result" 3 23, 3 23 0, S_000001ca8c568850;
 .timescale 0 0;
v000001ca8c543b50_0 .var "expected", 31 0;
v000001ca8c543120_0 .var "input_val", 31 0;
TD_Adder_tb.check_result ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001ca8c56e920_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v000001ca8c56e920_0, 0, 32;
    %load/vec4 v000001ca8c543120_0;
    %store/vec4 v000001ca8c57c150_0, 0, 32;
    %delay 10, 0;
    %vpi_call/w 3 27 "$display", "Test %0d:", v000001ca8c56e920_0 {0 0 0};
    %vpi_call/w 3 28 "$display", "  Entrada  = 0x%h (%0d)", v000001ca8c543120_0, v000001ca8c543120_0 {0 0 0};
    %vpi_call/w 3 29 "$display", "  Esperado = 0x%h (%0d)", v000001ca8c543b50_0, v000001ca8c543b50_0 {0 0 0};
    %vpi_call/w 3 30 "$display", "  Obtenido = 0x%h (%0d)", v000001ca8c57c1f0_0, v000001ca8c57c1f0_0 {0 0 0};
    %load/vec4 v000001ca8c57c1f0_0;
    %load/vec4 v000001ca8c543b50_0;
    %cmp/ne;
    %jmp/0xz  T_0.0, 6;
    %vpi_call/w 3 32 "$display", "  ERROR: No coincide" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001ca8c5689e0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v000001ca8c5689e0_0, 0, 32;
    %jmp T_0.1;
T_0.0 ;
    %vpi_call/w 3 35 "$display", "  OK" {0 0 0};
T_0.1 ;
    %vpi_call/w 3 37 "$display", "\000" {0 0 0};
    %end;
S_000001ca8c57bfc0 .scope module, "dut" "Adder" 3 7, 4 1 0, S_000001ca8c568850;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "pc_in";
    .port_info 1 /OUTPUT 32 "pc_out";
L_000001ca8c5cc088 .functor BUFT 1, C4<00000000000000000000000000000100>, C4<0>, C4<0>, C4<0>;
v000001ca8c569ff0_0 .net/2u *"_ivl_0", 31 0, L_000001ca8c5cc088;  1 drivers
v000001ca8c52bbc0_0 .net/s "pc_in", 31 0, v000001ca8c57c150_0;  1 drivers
v000001ca8c567390_0 .net/s "pc_out", 31 0, L_000001ca8c56e9c0;  alias, 1 drivers
L_000001ca8c56e9c0 .arith/sum 32, v000001ca8c57c150_0, L_000001ca8c5cc088;
    .scope S_000001ca8c568850;
T_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001ca8c5689e0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001ca8c56e920_0, 0, 32;
    %end;
    .thread T_1, $init;
    .scope S_000001ca8c568850;
T_2 ;
    %vpi_call/w 3 18 "$dumpfile", "sim/Adder_tb.vcd" {0 0 0};
    %vpi_call/w 3 19 "$dumpvars", 32'sb00000000000000000000000000000000, S_000001ca8c568850 {0 0 0};
    %end;
    .thread T_2;
    .scope S_000001ca8c568850;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001ca8c57c150_0, 0, 32;
    %vpi_call/w 3 44 "$display", "========================================" {0 0 0};
    %vpi_call/w 3 45 "$display", "=== Iniciando simulacion Adder ===" {0 0 0};
    %vpi_call/w 3 46 "$display", "========================================\012" {0 0 0};
    %delay 10, 0;
    %vpi_call/w 3 51 "$display", "========== Test 1: Desde direccion 0 ==========" {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001ca8c543120_0, 0, 32;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v000001ca8c543b50_0, 0, 32;
    %fork TD_Adder_tb.check_result, S_000001ca8c57be30;
    %join;
    %vpi_call/w 3 55 "$display", "========== Test 2: Desde direccion 4 ==========" {0 0 0};
    %pushi/vec4 4, 0, 32;
    %store/vec4 v000001ca8c543120_0, 0, 32;
    %pushi/vec4 8, 0, 32;
    %store/vec4 v000001ca8c543b50_0, 0, 32;
    %fork TD_Adder_tb.check_result, S_000001ca8c57be30;
    %join;
    %vpi_call/w 3 59 "$display", "========== Test 3: Desde direccion tipica ==========" {0 0 0};
    %pushi/vec4 4096, 0, 32;
    %store/vec4 v000001ca8c543120_0, 0, 32;
    %pushi/vec4 4100, 0, 32;
    %store/vec4 v000001ca8c543b50_0, 0, 32;
    %fork TD_Adder_tb.check_result, S_000001ca8c57be30;
    %join;
    %vpi_call/w 3 63 "$display", "========== Test 4: Desde direccion grande ==========" {0 0 0};
    %pushi/vec4 268435440, 0, 32;
    %store/vec4 v000001ca8c543120_0, 0, 32;
    %pushi/vec4 268435444, 0, 32;
    %store/vec4 v000001ca8c543b50_0, 0, 32;
    %fork TD_Adder_tb.check_result, S_000001ca8c57be30;
    %join;
    %vpi_call/w 3 67 "$display", "========== Test 5: Cerca del limite superior ==========" {0 0 0};
    %pushi/vec4 2147483644, 0, 32;
    %store/vec4 v000001ca8c543120_0, 0, 32;
    %pushi/vec4 2147483648, 0, 32;
    %store/vec4 v000001ca8c543b50_0, 0, 32;
    %fork TD_Adder_tb.check_result, S_000001ca8c57be30;
    %join;
    %vpi_call/w 3 71 "$display", "========== Test 6: Overflow ==========" {0 0 0};
    %pushi/vec4 4294967292, 0, 32;
    %store/vec4 v000001ca8c543120_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001ca8c543b50_0, 0, 32;
    %fork TD_Adder_tb.check_result, S_000001ca8c57be30;
    %join;
    %vpi_call/w 3 75 "$display", "========== Test 7: Desde direccion negativa ==========" {0 0 0};
    %pushi/vec4 4294967280, 0, 32;
    %store/vec4 v000001ca8c543120_0, 0, 32;
    %pushi/vec4 4294967284, 0, 32;
    %store/vec4 v000001ca8c543b50_0, 0, 32;
    %fork TD_Adder_tb.check_result, S_000001ca8c57be30;
    %join;
    %vpi_call/w 3 79 "$display", "========== Test 8: Desde 0xFFFFFFFF ==========" {0 0 0};
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v000001ca8c543120_0, 0, 32;
    %pushi/vec4 3, 0, 32;
    %store/vec4 v000001ca8c543b50_0, 0, 32;
    %fork TD_Adder_tb.check_result, S_000001ca8c57be30;
    %join;
    %vpi_call/w 3 83 "$display", "========================================" {0 0 0};
    %vpi_call/w 3 84 "$display", "=== Resumen de la simulacion ===" {0 0 0};
    %vpi_call/w 3 85 "$display", "Tests ejecutados: %0d", v000001ca8c56e920_0 {0 0 0};
    %load/vec4 v000001ca8c56e920_0;
    %load/vec4 v000001ca8c5689e0_0;
    %sub;
    %vpi_call/w 3 86 "$display", "Tests exitosos: %0d", S<0,vec4,s32> {1 0 0};
    %vpi_call/w 3 87 "$display", "Errores: %0d", v000001ca8c5689e0_0 {0 0 0};
    %vpi_call/w 3 88 "$display", "========================================" {0 0 0};
    %load/vec4 v000001ca8c5689e0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_3.0, 4;
    %vpi_call/w 3 91 "$display", "Todos los tests pasaron exitosamente" {0 0 0};
    %jmp T_3.1;
T_3.0 ;
    %vpi_call/w 3 93 "$display", "Se encontraron %0d errores", v000001ca8c5689e0_0 {0 0 0};
T_3.1 ;
    %vpi_call/w 3 95 "$finish" {0 0 0};
    %end;
    .thread T_3;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "tb/Adder_tb.sv";
    "src/Adder.sv";
