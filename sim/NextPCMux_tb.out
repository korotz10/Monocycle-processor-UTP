#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_0000023ecc4553e0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0000023ecc46e1f0 .scope module, "NextPCMux_tb" "NextPCMux_tb" 3 1;
 .timescale 0 0;
v0000023ecc457c50_0 .var/s "branch_target", 31 0;
v0000023ecc46e510_0 .var/i "errors", 31 0;
v0000023ecc46e5b0_0 .net/s "next_pc", 31 0, v0000023ecc12ace0_0;  1 drivers
v0000023ecc432eb0_0 .var/s "pc_plus4", 31 0;
v0000023ecc432f50_0 .var "sel", 0 0;
v0000023ecc432ff0_0 .var/i "tests", 31 0;
S_0000023ecc46e380 .scope task, "check_result" "check_result" 3 27, 3 27 0, S_0000023ecc46e1f0;
 .timescale 0 0;
v0000023ecc45aa00_0 .var "branch_val", 31 0;
v0000023ecc12c580_0 .var "expected", 31 0;
v0000023ecc12a4a0_0 .var "pc4_val", 31 0;
v0000023ecc456100_0 .var "sel_val", 0 0;
v0000023ecc4563f0_0 .var/str "test_name";
TD_NextPCMux_tb.check_result ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000023ecc432ff0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000023ecc432ff0_0, 0, 32;
    %load/vec4 v0000023ecc12a4a0_0;
    %store/vec4 v0000023ecc432eb0_0, 0, 32;
    %load/vec4 v0000023ecc45aa00_0;
    %store/vec4 v0000023ecc457c50_0, 0, 32;
    %load/vec4 v0000023ecc456100_0;
    %store/vec4 v0000023ecc432f50_0, 0, 1;
    %delay 10, 0;
    %vpi_call/w 3 34 "$display", "Test %0d: %s", v0000023ecc432ff0_0, v0000023ecc4563f0_0 {0 0 0};
    %vpi_call/w 3 35 "$display", "  PC+4          = 0x%h", v0000023ecc12a4a0_0 {0 0 0};
    %vpi_call/w 3 36 "$display", "  Branch Target = 0x%h", v0000023ecc45aa00_0 {0 0 0};
    %load/vec4 v0000023ecc456100_0;
    %flag_set/vec4 8;
    %jmp/0 T_0.0, 8;
    %pushi/vec4 0, 0, 32; draw_string_vec4
    %pushi/vec4 1114792302, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 25448, 0, 16; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_0.1, 8;
T_0.0 ; End of true expr.
    %pushi/vec4 1399157109, 0, 32; draw_string_vec4
    %pushi/vec4 1701737577, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 24940, 0, 16; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_0.1, 8;
 ; End of false expr.
    %blend;
T_0.1;
    %vpi_call/w 3 37 "$display", "  SEL           = %b (%s)", v0000023ecc456100_0, S<0,vec4,u80> {1 0 0};
    %vpi_call/w 3 38 "$display", "  Esperado      = 0x%h", v0000023ecc12c580_0 {0 0 0};
    %vpi_call/w 3 39 "$display", "  Obtenido      = 0x%h", v0000023ecc46e5b0_0 {0 0 0};
    %load/vec4 v0000023ecc46e5b0_0;
    %load/vec4 v0000023ecc12c580_0;
    %cmp/ne;
    %jmp/0xz  T_0.2, 6;
    %vpi_call/w 3 41 "$display", "  ERROR: No coincide" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000023ecc46e510_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000023ecc46e510_0, 0, 32;
    %jmp T_0.3;
T_0.2 ;
    %vpi_call/w 3 44 "$display", "  OK" {0 0 0};
T_0.3 ;
    %vpi_call/w 3 46 "$display", "\000" {0 0 0};
    %end;
S_0000023ecc432d20 .scope module, "dut" "NextPCMux" 3 9, 4 1 0, S_0000023ecc46e1f0;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "pc_plus4";
    .port_info 1 /INPUT 32 "branch_target";
    .port_info 2 /INPUT 1 "sel";
    .port_info 3 /OUTPUT 32 "next_pc";
v0000023ecc456f50_0 .net/s "branch_target", 31 0, v0000023ecc457c50_0;  1 drivers
v0000023ecc12ace0_0 .var/s "next_pc", 31 0;
v0000023ecc12ad80_0 .net/s "pc_plus4", 31 0, v0000023ecc432eb0_0;  1 drivers
v0000023ecc457bb0_0 .net "sel", 0 0, v0000023ecc432f50_0;  1 drivers
E_0000023ecc459990 .event anyedge, v0000023ecc457bb0_0, v0000023ecc456f50_0, v0000023ecc12ad80_0;
    .scope S_0000023ecc432d20;
T_1 ;
    %wait E_0000023ecc459990;
    %load/vec4 v0000023ecc457bb0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %load/vec4 v0000023ecc456f50_0;
    %store/vec4 v0000023ecc12ace0_0, 0, 32;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v0000023ecc12ad80_0;
    %store/vec4 v0000023ecc12ace0_0, 0, 32;
T_1.1 ;
    %jmp T_1;
    .thread T_1, $push;
    .scope S_0000023ecc46e1f0;
T_2 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000023ecc46e510_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000023ecc432ff0_0, 0, 32;
    %end;
    .thread T_2, $init;
    .scope S_0000023ecc46e1f0;
T_3 ;
    %vpi_call/w 3 22 "$dumpfile", "sim/NextPCMux_tb.vcd" {0 0 0};
    %vpi_call/w 3 23 "$dumpvars", 32'sb00000000000000000000000000000000, S_0000023ecc46e1f0 {0 0 0};
    %end;
    .thread T_3;
    .scope S_0000023ecc46e1f0;
T_4 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000023ecc432eb0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000023ecc457c50_0, 0, 32;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000023ecc432f50_0, 0, 1;
    %vpi_call/w 3 55 "$display", "========================================" {0 0 0};
    %vpi_call/w 3 56 "$display", "=== Iniciando simulacion NextPCMux ===" {0 0 0};
    %vpi_call/w 3 57 "$display", "========================================\012" {0 0 0};
    %delay 10, 0;
    %vpi_call/w 3 62 "$display", "========== Test 1: Ejecucion secuencial ==========" {0 0 0};
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0000023ecc12a4a0_0, 0, 32;
    %pushi/vec4 4096, 0, 32;
    %store/vec4 v0000023ecc45aa00_0, 0, 32;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000023ecc456100_0, 0, 1;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0000023ecc12c580_0, 0, 32;
    %pushi/str "Secuencial PC+4";
    %store/str v0000023ecc4563f0_0;
    %fork TD_NextPCMux_tb.check_result, S_0000023ecc46e380;
    %join;
    %vpi_call/w 3 66 "$display", "========== Test 2: Salto a branch target ==========" {0 0 0};
    %pushi/vec4 8, 0, 32;
    %store/vec4 v0000023ecc12a4a0_0, 0, 32;
    %pushi/vec4 4096, 0, 32;
    %store/vec4 v0000023ecc45aa00_0, 0, 32;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000023ecc456100_0, 0, 1;
    %pushi/vec4 4096, 0, 32;
    %store/vec4 v0000023ecc12c580_0, 0, 32;
    %pushi/str "Branch";
    %store/str v0000023ecc4563f0_0;
    %fork TD_NextPCMux_tb.check_result, S_0000023ecc46e380;
    %join;
    %vpi_call/w 3 70 "$display", "========== Test 3: Ejecucion secuencial 0x104 ==========" {0 0 0};
    %pushi/vec4 260, 0, 32;
    %store/vec4 v0000023ecc12a4a0_0, 0, 32;
    %pushi/vec4 8192, 0, 32;
    %store/vec4 v0000023ecc45aa00_0, 0, 32;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000023ecc456100_0, 0, 1;
    %pushi/vec4 260, 0, 32;
    %store/vec4 v0000023ecc12c580_0, 0, 32;
    %pushi/str "Secuencial";
    %store/str v0000023ecc4563f0_0;
    %fork TD_NextPCMux_tb.check_result, S_0000023ecc46e380;
    %join;
    %vpi_call/w 3 74 "$display", "========== Test 4: Salto hacia atras (loop) ==========" {0 0 0};
    %pushi/vec4 516, 0, 32;
    %store/vec4 v0000023ecc12a4a0_0, 0, 32;
    %pushi/vec4 256, 0, 32;
    %store/vec4 v0000023ecc45aa00_0, 0, 32;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000023ecc456100_0, 0, 1;
    %pushi/vec4 256, 0, 32;
    %store/vec4 v0000023ecc12c580_0, 0, 32;
    %pushi/str "Branch backward";
    %store/str v0000023ecc4563f0_0;
    %fork TD_NextPCMux_tb.check_result, S_0000023ecc46e380;
    %join;
    %vpi_call/w 3 78 "$display", "========== Test 5: Direccion grande secuencial ==========" {0 0 0};
    %pushi/vec4 268435444, 0, 32;
    %store/vec4 v0000023ecc12a4a0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000023ecc45aa00_0, 0, 32;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000023ecc456100_0, 0, 1;
    %pushi/vec4 268435444, 0, 32;
    %store/vec4 v0000023ecc12c580_0, 0, 32;
    %pushi/str "Secuencial grande";
    %store/str v0000023ecc4563f0_0;
    %fork TD_NextPCMux_tb.check_result, S_0000023ecc46e380;
    %join;
    %vpi_call/w 3 82 "$display", "========== Test 6: Salto a direccion lejana ==========" {0 0 0};
    %pushi/vec4 20, 0, 32;
    %store/vec4 v0000023ecc12a4a0_0, 0, 32;
    %pushi/vec4 268435456, 0, 32;
    %store/vec4 v0000023ecc45aa00_0, 0, 32;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000023ecc456100_0, 0, 1;
    %pushi/vec4 268435456, 0, 32;
    %store/vec4 v0000023ecc12c580_0, 0, 32;
    %pushi/str "Branch far";
    %store/str v0000023ecc4563f0_0;
    %fork TD_NextPCMux_tb.check_result, S_0000023ecc46e380;
    %join;
    %vpi_call/w 3 86 "$display", "========== Test 7: Wraparound secuencial ==========" {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000023ecc12a4a0_0, 0, 32;
    %pushi/vec4 1280, 0, 32;
    %store/vec4 v0000023ecc45aa00_0, 0, 32;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000023ecc456100_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000023ecc12c580_0, 0, 32;
    %pushi/str "Secuencial wraparound";
    %store/str v0000023ecc4563f0_0;
    %fork TD_NextPCMux_tb.check_result, S_0000023ecc46e380;
    %join;
    %vpi_call/w 3 90 "$display", "========== Test 8: Salto a direccion 0 ==========" {0 0 0};
    %pushi/vec4 2748, 0, 32;
    %store/vec4 v0000023ecc12a4a0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000023ecc45aa00_0, 0, 32;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000023ecc456100_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000023ecc12c580_0, 0, 32;
    %pushi/str "Branch to 0";
    %store/str v0000023ecc4563f0_0;
    %fork TD_NextPCMux_tb.check_result, S_0000023ecc46e380;
    %join;
    %vpi_call/w 3 94 "$display", "========================================" {0 0 0};
    %vpi_call/w 3 95 "$display", "=== Resumen de la simulacion ===" {0 0 0};
    %vpi_call/w 3 96 "$display", "Tests ejecutados: %0d", v0000023ecc432ff0_0 {0 0 0};
    %load/vec4 v0000023ecc432ff0_0;
    %load/vec4 v0000023ecc46e510_0;
    %sub;
    %vpi_call/w 3 97 "$display", "Tests exitosos: %0d", S<0,vec4,s32> {1 0 0};
    %vpi_call/w 3 98 "$display", "Errores: %0d", v0000023ecc46e510_0 {0 0 0};
    %vpi_call/w 3 99 "$display", "========================================" {0 0 0};
    %load/vec4 v0000023ecc46e510_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_4.0, 4;
    %vpi_call/w 3 102 "$display", "Todos los tests pasaron exitosamente" {0 0 0};
    %jmp T_4.1;
T_4.0 ;
    %vpi_call/w 3 104 "$display", "Se encontraron %0d errores", v0000023ecc46e510_0 {0 0 0};
T_4.1 ;
    %vpi_call/w 3 106 "$finish" {0 0 0};
    %end;
    .thread T_4;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "tb/NextPCMux_tb.sv";
    "src/NextPCMux.sv";
