$date
	Wed Oct 22 15:47:19 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ALU_tb $end
$var wire 32 ! ALURes [31:0] $end
$var reg 32 " A [31:0] $end
$var reg 4 # ALUOp [3:0] $end
$var reg 32 $ B [31:0] $end
$var integer 32 % errors [31:0] $end
$var integer 32 & tests [31:0] $end
$scope module dut $end
$var wire 32 ' A [31:0] $end
$var wire 4 ( ALUOp [3:0] $end
$var wire 32 ) B [31:0] $end
$var reg 32 * ALURes [31:0] $end
$upscope $end
$scope task check_result $end
$var reg 32 + exp [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx +
b11001 *
b1010 )
b0 (
b1111 '
b0 &
b0 %
b1010 $
b0 #
b1111 "
b11001 !
$end
#10
b11111111111111111111111111111011 !
b11111111111111111111111111111011 *
b11111111111111111111111111110001 "
b11111111111111111111111111110001 '
b1 &
b11001 +
#20
b1111 !
b1111 *
b101 $
b101 )
b10100 "
b10100 '
b1000 #
b1000 (
b10 &
b11111111111111111111111111111011 +
#30
b11111111111111111111111111110001 !
b11111111111111111111111111110001 *
b10100 $
b10100 )
b101 "
b101 '
b11 &
b1111 +
#40
b10000 !
b10000 *
b10 $
b10 )
b100 "
b100 '
b1 #
b1 (
b100 &
b11111111111111111111111111110001 +
#50
b1000 !
b1000 *
b11 $
b11 )
b1 "
b1 '
b101 &
b10000 +
#60
b1 !
b1 *
b1010 $
b1010 )
b101 "
b101 '
b10 #
b10 (
b110 &
b1000 +
#70
b0 !
b0 *
b101 $
b101 )
b1010 "
b1010 '
b111 &
b1 +
#80
b1 !
b1 *
b11111111111111111111111111111011 "
b11111111111111111111111111111011 '
b1000 &
b0 +
#90
b1010 $
b1010 )
b101 "
b101 '
b11 #
b11 (
b1001 &
b1 +
#100
b0 !
b0 *
b11111111111111111111111111111111 "
b11111111111111111111111111111111 '
b1010 &
#110
b11111111111111111111111111111111 !
b11111111111111111111111111111111 *
b1010101010101010101010101010101 $
b1010101010101010101010101010101 )
b10101010101010101010101010101010 "
b10101010101010101010101010101010 '
b100 #
b100 (
b1011 &
b0 +
#120
b1111000011110000111100001111 $
b1111000011110000111100001111 )
b11110000111100001111000011110000 "
b11110000111100001111000011110000 '
b1100 &
b11111111111111111111111111111111 +
#130
b100 !
b100 *
b10 $
b10 )
b10000 "
b10000 '
b101 #
b101 (
b1101 &
#140
b1111111111111111111111111111 !
b1111111111111111111111111111 *
b100 $
b100 )
b11111111111111111111111111111111 "
b11111111111111111111111111111111 '
b1110 &
b100 +
#150
b100 !
b100 *
b10 $
b10 )
b10000 "
b10000 '
b1101 #
b1101 (
b1111 &
b1111111111111111111111111111 +
#160
b11111111111111111111111111111100 !
b11111111111111111111111111111100 *
b11111111111111111111111111110000 "
b11111111111111111111111111110000 '
b10000 &
b100 +
#170
b11111111111111111111111111111111 !
b11111111111111111111111111111111 *
b1010101010101010101010101010101 $
b1010101010101010101010101010101 )
b10101010101010101010101010101010 "
b10101010101010101010101010101010 '
b110 #
b110 (
b10001 &
b11111111111111111111111111111100 +
#180
b11110000000000000000000000001111 !
b11110000000000000000000000001111 *
b1111 $
b1111 )
b11110000000000000000000000000000 "
b11110000000000000000000000000000 '
b10010 &
b11111111111111111111111111111111 +
#190
b1010101010101010101010101010101 !
b1010101010101010101010101010101 *
b1010101010101010101010101010101 $
b1010101010101010101010101010101 )
b11111111111111111111111111111111 "
b11111111111111111111111111111111 '
b111 #
b111 (
b10011 &
b11110000000000000000000000001111 +
#200
b11110000111100000000000000000000 !
b11110000111100000000000000000000 *
b11111111111111110000000000000000 $
b11111111111111110000000000000000 )
b11110000111100001111000011110000 "
b11110000111100001111000011110000 '
b10100 &
b1010101010101010101010101010101 +
#210
b110010 !
b110010 *
b110010 $
b110010 )
b1100100 "
b1100100 '
b1001 #
b1001 (
b10101 &
b11110000111100000000000000000000 +
#220
b11111111111111111111111111100111 !
b11111111111111111111111111100111 *
b11111111111111111111111111100111 $
b11111111111111111111111111100111 )
b0 "
b0 '
b10110 &
b110010 +
#230
b10111 &
b11111111111111111111111111100111 +
