$date
	Tue Oct 28 17:15:54 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RegistersUnit_tb $end
$var wire 32 ! ru_rs2 [31:0] $end
$var wire 32 " ru_rs1 [31:0] $end
$var reg 32 # DataWR [31:0] $end
$var reg 1 $ RUWr $end
$var reg 1 % clk $end
$var reg 5 & rd [4:0] $end
$var reg 5 ' rs1 [4:0] $end
$var reg 5 ( rs2 [4:0] $end
$var integer 32 ) errors [31:0] $end
$var integer 32 * tests [31:0] $end
$scope module dut $end
$var wire 32 + DataWR [31:0] $end
$var wire 1 $ RUWr $end
$var wire 1 % clk $end
$var wire 5 , rd [4:0] $end
$var wire 5 - rs1 [4:0] $end
$var wire 5 . rs2 [4:0] $end
$var wire 32 / ru_rs1 [31:0] $end
$var wire 32 0 ru_rs2 [31:0] $end
$scope begin $unm_blk_10 $end
$var integer 32 1 i [31:0] $end
$upscope $end
$upscope $end
$scope task read_register $end
$var reg 32 2 expected [31:0] $end
$var reg 5 3 reg_addr [4:0] $end
$upscope $end
$scope task read_two_registers $end
$var reg 32 4 exp1 [31:0] $end
$var reg 32 5 exp2 [31:0] $end
$var reg 5 6 reg1 [4:0] $end
$var reg 5 7 reg2 [4:0] $end
$upscope $end
$scope task write_register $end
$var reg 32 8 data [31:0] $end
$var reg 5 9 reg_addr [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
b100000 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
0%
0$
b0 #
b0 "
b0 !
$end
#5
1%
#10
0%
#15
1%
#20
0%
#25
b1000000000 2
b10 3
1%
#30
0%
#35
b1000000000 "
b1000000000 /
b10 '
b10 -
1%
#36
b0 2
b0 3
b1 *
#40
0%
#45
b0 "
b0 /
b0 '
b0 -
1%
#46
b11011110101011011011111011101111 8
b0 9
b10 *
#50
0%
#55
1$
b11011110101011011011111011101111 #
b11011110101011011011111011101111 +
1%
#60
0%
#65
0$
1%
#70
0%
#75
1%
#76
b1010 8
b1 9
b11 *
#80
0%
#85
1$
b1010 #
b1010 +
b1 &
b1 ,
1%
#90
0%
#95
b10100 8
b11 9
0$
1%
#100
0%
#105
1$
b10100 #
b10100 +
b11 &
b11 ,
1%
#110
0%
#115
b11111111111111111111111111111111 8
b101 9
0$
1%
#120
0%
#125
1$
b11111111111111111111111111111111 #
b11111111111111111111111111111111 +
b101 &
b101 ,
1%
#130
0%
#135
b10010001101000101011001111000 8
b1010 9
0$
1%
#140
0%
#145
1$
b10010001101000101011001111000 #
b10010001101000101011001111000 +
b1010 &
b1010 ,
1%
#150
0%
#155
b1010 2
b1 3
0$
1%
#160
0%
#165
b1010 "
b1010 /
b1 '
b1 -
1%
#166
b10100 2
b11 3
b100 *
#170
0%
#175
b10100 "
b10100 /
b11 '
b11 -
1%
#176
b11111111111111111111111111111111 2
b101 3
b101 *
#180
0%
#185
b11111111111111111111111111111111 "
b11111111111111111111111111111111 /
b101 '
b101 -
1%
#186
b10010001101000101011001111000 2
b1010 3
b110 *
#190
0%
#195
b10010001101000101011001111000 "
b10010001101000101011001111000 /
b1010 '
b1010 -
1%
#196
b11111111 8
b1 9
b111 *
#200
0%
#205
1$
b11111111 #
b11111111 +
b1 &
b1 ,
1%
#210
0%
#215
b11111111 2
b1 3
0$
1%
#220
0%
#225
b11111111 "
b11111111 /
b1 '
b1 -
1%
#226
b10100 5
b11111111 4
b11 7
b1 6
b1000 *
#230
0%
#235
b10100 !
b10100 0
b11 (
b11 .
1%
#236
b10010001101000101011001111000 5
b11111111111111111111111111111111 4
b1010 7
b101 6
b1010 *
#240
0%
#245
b10010001101000101011001111000 !
b10010001101000101011001111000 0
b1010 (
b1010 .
b11111111111111111111111111111111 "
b11111111111111111111111111111111 /
b101 '
b101 -
1%
#246
b1100 *
#250
0%
#255
b10111010101011011111000000001101 #
b10111010101011011111000000001101 +
b111 &
b111 ,
1%
#260
0%
#265
b0 2
b111 3
1%
#270
0%
#275
b0 "
b0 /
b111 '
b111 -
1%
#276
b11001010111111101011101010111110 8
b1111 9
b1101 *
#280
0%
#285
1$
b11001010111111101011101010111110 #
b11001010111111101011101010111110 +
b1111 &
b1111 ,
1%
#290
0%
#295
b11001010111111101011101010111110 2
b1111 3
0$
1%
#300
0%
#305
b11001010111111101011101010111110 "
b11001010111111101011101010111110 /
b1111 '
b1111 -
1%
#306
b11111111111111110000000000000000 8
b11111 9
b1110 *
#310
0%
#315
1$
b11111111111111110000000000000000 #
b11111111111111110000000000000000 +
b11111 &
b11111 ,
1%
#320
0%
#325
b11111111111111110000000000000000 2
b11111 3
0$
1%
#330
0%
#335
bx "
bx /
b11111 '
b11111 -
1%
#336
b11111111111111111111111111110000 8
b10100 9
b1 )
b1111 *
#340
0%
#345
1$
b11111111111111111111111111110000 #
b11111111111111111111111111110000 +
b10100 &
b10100 ,
1%
#350
0%
#355
b11111111111111111111111111110000 2
b10100 3
0$
1%
#360
0%
#365
b10100 '
b10100 -
1%
#366
b10 )
b10000 *
#370
0%
#375
1%
#380
0%
#385
1%
#390
0%
#395
1%
#400
0%
#405
1%
#410
0%
#415
1%
