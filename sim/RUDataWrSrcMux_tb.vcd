$date
	Wed Oct 29 23:53:59 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RUDataWrSrcMux_tb $end
$var wire 32 ! ru_wrdata [31:0] $end
$var reg 32 " adder_result [31:0] $end
$var reg 32 # alu_result [31:0] $end
$var reg 32 $ data_mem_rd [31:0] $end
$var reg 2 % sel [1:0] $end
$var integer 32 & errors [31:0] $end
$var integer 32 ' tests [31:0] $end
$scope module dut $end
$var wire 32 ( adder_result [31:0] $end
$var wire 32 ) alu_result [31:0] $end
$var wire 32 * data_mem_rd [31:0] $end
$var wire 2 + sel [1:0] $end
$var reg 32 , ru_wrdata [31:0] $end
$upscope $end
$scope task check_result $end
$var reg 32 - adder_val [31:0] $end
$var reg 32 . alu_val [31:0] $end
$var reg 32 / expected [31:0] $end
$var reg 32 0 mem_val [31:0] $end
$var reg 2 1 sel_val [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 1
bx 0
bx /
bx .
bx -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#10
b101010 !
b101010 ,
b100000000 "
b100000000 (
b1100100 $
b1100100 *
b101010 #
b101010 )
b1 '
b101010 /
b0 1
b100000000 -
b1100100 0
b101010 .
#20
b1100100 !
b1100100 ,
b1 %
b1 +
b10 '
b1100100 /
b1 1
#30
b100000000 !
b100000000 ,
b10 %
b10 +
b11 '
b100000000 /
b10 1
#40
b10010001101000101011001111000 !
b10010001101000101011001111000 ,
b11 %
b11 +
b11011110101011011011111011101111 "
b11011110101011011011111011101111 (
b10101011110011011110111100000000 $
b10101011110011011110111100000000 *
b10010001101000101011001111000 #
b10010001101000101011001111000 )
b100 '
b10010001101000101011001111000 /
b11 1
b11011110101011011011111011101111 -
b10101011110011011110111100000000 0
b10010001101000101011001111000 .
#50
b11111111111111111111111111110000 !
b11111111111111111111111111110000 ,
b1 %
b1 +
b1000000000 "
b1000000000 (
b11111111111111111111111111110000 $
b11111111111111111111111111110000 *
b1010000 #
b1010000 )
b101 '
b11111111111111111111111111110000 /
b1 1
b1000000000 -
b11111111111111111111111111110000 0
b1010000 .
#60
b100000100 !
b100000100 ,
b10 %
b10 +
b100000100 "
b100000100 (
b0 $
b0 *
b0 #
b0 )
b110 '
b100000100 /
b10 1
b100000100 -
b0 0
b0 .
#70
b1111111111111111111111111111111 !
b1111111111111111111111111111111 ,
b0 %
b0 +
b10000000000000 "
b10000000000000 (
b1000000000000 $
b1000000000000 *
b1111111111111111111111111111111 #
b1111111111111111111111111111111 )
b111 '
b1111111111111111111111111111111 /
b0 1
b10000000000000 -
b1000000000000 0
b1111111111111111111111111111111 .
#80
b0 !
b0 ,
b1 %
b1 +
b0 "
b0 (
b0 $
b0 *
b0 #
b0 )
b1000 '
b0 /
b1 1
b0 -
b0 0
b0 .
#90
