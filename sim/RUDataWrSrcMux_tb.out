#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_000001c5ab8e15f0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_000001c5ab8e2570 .scope module, "RUDataWrSrcMux_tb" "RUDataWrSrcMux_tb" 3 1;
 .timescale 0 0;
v000001c5ab8df6f0_0 .var/s "adder_result", 31 0;
v000001c5ab8e4340_0 .var/s "alu_result", 31 0;
v000001c5ab8e43e0_0 .var/s "data_mem_rd", 31 0;
v000001c5ab8e4480_0 .var/i "errors", 31 0;
v000001c5ab8e4520_0 .net/s "ru_wrdata", 31 0, v000001c5ab8f0ff0_0;  1 drivers
v000001c5ab94c810_0 .var/s "sel", 1 0;
v000001c5ab94c8b0_0 .var/i "tests", 31 0;
S_000001c5ab8f0c30 .scope task, "check_result" "check_result" 3 29, 3 29 0, S_000001c5ab8e2570;
 .timescale 0 0;
v000001c5ab8e2700_0 .var "adder_val", 31 0;
v000001c5ab8b3120_0 .var "alu_val", 31 0;
v000001c5ab8daa40_0 .var "expected", 31 0;
v000001c5ab8db4a0_0 .var "mem_val", 31 0;
v000001c5ab8d71b0_0 .var "sel_val", 1 0;
v000001c5ab8d7250_0 .var/str "test_name";
TD_RUDataWrSrcMux_tb.check_result ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001c5ab94c8b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v000001c5ab94c8b0_0, 0, 32;
    %load/vec4 v000001c5ab8b3120_0;
    %store/vec4 v000001c5ab8e4340_0, 0, 32;
    %load/vec4 v000001c5ab8db4a0_0;
    %store/vec4 v000001c5ab8e43e0_0, 0, 32;
    %load/vec4 v000001c5ab8e2700_0;
    %store/vec4 v000001c5ab8df6f0_0, 0, 32;
    %load/vec4 v000001c5ab8d71b0_0;
    %store/vec4 v000001c5ab94c810_0, 0, 2;
    %delay 10, 0;
    %vpi_call/w 3 38 "$display", "Test %0d: %s", v000001c5ab94c8b0_0, v000001c5ab8d7250_0 {0 0 0};
    %vpi_call/w 3 39 "$display", "  alu_result    = 0x%h", v000001c5ab8b3120_0 {0 0 0};
    %vpi_call/w 3 40 "$display", "  data_mem_rd   = 0x%h", v000001c5ab8db4a0_0 {0 0 0};
    %vpi_call/w 3 41 "$display", "  adder_result  = 0x%h", v000001c5ab8e2700_0 {0 0 0};
    %load/vec4 v000001c5ab8d71b0_0;
    %cmpi/e 2, 0, 2;
    %flag_mov 8, 4;
    %jmp/0 T_0.0, 8;
    %pushi/vec4 1633969253, 0, 32; draw_string_vec4
    %pushi/vec4 1918857829, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 1937075316, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_0.1, 8;
T_0.0 ; End of true expr.
    %load/vec4 v000001c5ab8d71b0_0;
    %cmpi/e 1, 0, 2;
    %flag_mov 9, 4;
    %jmp/0 T_0.2, 9;
    %pushi/vec4 6578548, 0, 32; draw_string_vec4
    %pushi/vec4 1633643877, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 1834971748, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_0.3, 9;
T_0.2 ; End of true expr.
    %pushi/vec4 24940, 0, 32; draw_string_vec4
    %pushi/vec4 1969189477, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 1937075316, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_0.3, 9;
 ; End of false expr.
    %blend;
T_0.3;
    %jmp/0 T_0.1, 8;
 ; End of false expr.
    %blend;
T_0.1;
    %vpi_call/w 3 42 "$display", "  SEL           = %b (%s)", v000001c5ab8d71b0_0, S<0,vec4,u96> {1 0 0};
    %vpi_call/w 3 45 "$display", "  Esperado      = 0x%h", v000001c5ab8daa40_0 {0 0 0};
    %vpi_call/w 3 46 "$display", "  Obtenido      = 0x%h", v000001c5ab8e4520_0 {0 0 0};
    %load/vec4 v000001c5ab8e4520_0;
    %load/vec4 v000001c5ab8daa40_0;
    %cmp/ne;
    %jmp/0xz  T_0.4, 6;
    %vpi_call/w 3 48 "$display", "  ERROR: No coincide" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001c5ab8e4480_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v000001c5ab8e4480_0, 0, 32;
    %jmp T_0.5;
T_0.4 ;
    %vpi_call/w 3 51 "$display", "  OK" {0 0 0};
T_0.5 ;
    %vpi_call/w 3 53 "$display", "\000" {0 0 0};
    %end;
S_000001c5ab8f0dc0 .scope module, "dut" "RUDataWrSrcMux" 3 10, 4 1 0, S_000001c5ab8e2570;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "alu_result";
    .port_info 1 /INPUT 32 "data_mem_rd";
    .port_info 2 /INPUT 32 "adder_result";
    .port_info 3 /INPUT 2 "sel";
    .port_info 4 /OUTPUT 32 "ru_wrdata";
v000001c5ab89c020_0 .net/s "adder_result", 31 0, v000001c5ab8df6f0_0;  1 drivers
v000001c5ab89c0c0_0 .net/s "alu_result", 31 0, v000001c5ab8e4340_0;  1 drivers
v000001c5ab8f0f50_0 .net/s "data_mem_rd", 31 0, v000001c5ab8e43e0_0;  1 drivers
v000001c5ab8f0ff0_0 .var/s "ru_wrdata", 31 0;
v000001c5ab8df650_0 .net/s "sel", 1 0, v000001c5ab94c810_0;  1 drivers
E_000001c5ab8f8310 .event anyedge, v000001c5ab8df650_0, v000001c5ab89c020_0, v000001c5ab8f0f50_0, v000001c5ab89c0c0_0;
    .scope S_000001c5ab8f0dc0;
T_1 ;
    %wait E_000001c5ab8f8310;
    %load/vec4 v000001c5ab8df650_0;
    %cmpi/e 2, 0, 2;
    %jmp/0xz  T_1.0, 4;
    %load/vec4 v000001c5ab89c020_0;
    %store/vec4 v000001c5ab8f0ff0_0, 0, 32;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v000001c5ab8df650_0;
    %cmpi/e 1, 0, 2;
    %jmp/0xz  T_1.2, 4;
    %load/vec4 v000001c5ab8f0f50_0;
    %store/vec4 v000001c5ab8f0ff0_0, 0, 32;
    %jmp T_1.3;
T_1.2 ;
    %load/vec4 v000001c5ab89c0c0_0;
    %store/vec4 v000001c5ab8f0ff0_0, 0, 32;
T_1.3 ;
T_1.1 ;
    %jmp T_1;
    .thread T_1, $push;
    .scope S_000001c5ab8e2570;
T_2 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001c5ab8e4480_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001c5ab94c8b0_0, 0, 32;
    %end;
    .thread T_2, $init;
    .scope S_000001c5ab8e2570;
T_3 ;
    %vpi_call/w 3 24 "$dumpfile", "sim/RUDataWrSrcMux_tb.vcd" {0 0 0};
    %vpi_call/w 3 25 "$dumpvars", 32'sb00000000000000000000000000000000, S_000001c5ab8e2570 {0 0 0};
    %end;
    .thread T_3;
    .scope S_000001c5ab8e2570;
T_4 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001c5ab8e4340_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001c5ab8e43e0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001c5ab8df6f0_0, 0, 32;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v000001c5ab94c810_0, 0, 2;
    %vpi_call/w 3 63 "$display", "========================================" {0 0 0};
    %vpi_call/w 3 64 "$display", "=== Iniciando simulacion RUDataWrSrcMux ===" {0 0 0};
    %vpi_call/w 3 65 "$display", "========================================\012" {0 0 0};
    %delay 10, 0;
    %vpi_call/w 3 70 "$display", "========== Test 1: Seleccionar alu_result (sel=00) ==========" {0 0 0};
    %pushi/vec4 42, 0, 32;
    %store/vec4 v000001c5ab8b3120_0, 0, 32;
    %pushi/vec4 100, 0, 32;
    %store/vec4 v000001c5ab8db4a0_0, 0, 32;
    %pushi/vec4 256, 0, 32;
    %store/vec4 v000001c5ab8e2700_0, 0, 32;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v000001c5ab8d71b0_0, 0, 2;
    %pushi/vec4 42, 0, 32;
    %store/vec4 v000001c5ab8daa40_0, 0, 32;
    %pushi/str "Usar alu_result";
    %store/str v000001c5ab8d7250_0;
    %fork TD_RUDataWrSrcMux_tb.check_result, S_000001c5ab8f0c30;
    %join;
    %vpi_call/w 3 75 "$display", "========== Test 2: Seleccionar data_mem_rd (sel=01) ==========" {0 0 0};
    %pushi/vec4 42, 0, 32;
    %store/vec4 v000001c5ab8b3120_0, 0, 32;
    %pushi/vec4 100, 0, 32;
    %store/vec4 v000001c5ab8db4a0_0, 0, 32;
    %pushi/vec4 256, 0, 32;
    %store/vec4 v000001c5ab8e2700_0, 0, 32;
    %pushi/vec4 1, 0, 2;
    %store/vec4 v000001c5ab8d71b0_0, 0, 2;
    %pushi/vec4 100, 0, 32;
    %store/vec4 v000001c5ab8daa40_0, 0, 32;
    %pushi/str "Usar data_mem_rd";
    %store/str v000001c5ab8d7250_0;
    %fork TD_RUDataWrSrcMux_tb.check_result, S_000001c5ab8f0c30;
    %join;
    %vpi_call/w 3 80 "$display", "========== Test 3: Seleccionar adder_result (sel=10) ==========" {0 0 0};
    %pushi/vec4 42, 0, 32;
    %store/vec4 v000001c5ab8b3120_0, 0, 32;
    %pushi/vec4 100, 0, 32;
    %store/vec4 v000001c5ab8db4a0_0, 0, 32;
    %pushi/vec4 256, 0, 32;
    %store/vec4 v000001c5ab8e2700_0, 0, 32;
    %pushi/vec4 2, 0, 2;
    %store/vec4 v000001c5ab8d71b0_0, 0, 2;
    %pushi/vec4 256, 0, 32;
    %store/vec4 v000001c5ab8daa40_0, 0, 32;
    %pushi/str "Usar adder_result";
    %store/str v000001c5ab8d7250_0;
    %fork TD_RUDataWrSrcMux_tb.check_result, S_000001c5ab8f0c30;
    %join;
    %vpi_call/w 3 85 "$display", "========== Test 4: sel=11 debe usar alu_result (default) ==========" {0 0 0};
    %pushi/vec4 305419896, 0, 32;
    %store/vec4 v000001c5ab8b3120_0, 0, 32;
    %pushi/vec4 2882400000, 0, 32;
    %store/vec4 v000001c5ab8db4a0_0, 0, 32;
    %pushi/vec4 3735928559, 0, 32;
    %store/vec4 v000001c5ab8e2700_0, 0, 32;
    %pushi/vec4 3, 0, 2;
    %store/vec4 v000001c5ab8d71b0_0, 0, 2;
    %pushi/vec4 305419896, 0, 32;
    %store/vec4 v000001c5ab8daa40_0, 0, 32;
    %pushi/str "Default a alu_result";
    %store/str v000001c5ab8d7250_0;
    %fork TD_RUDataWrSrcMux_tb.check_result, S_000001c5ab8f0c30;
    %join;
    %vpi_call/w 3 90 "$display", "========== Test 5: data_mem_rd negativo ==========" {0 0 0};
    %pushi/vec4 80, 0, 32;
    %store/vec4 v000001c5ab8b3120_0, 0, 32;
    %pushi/vec4 4294967280, 0, 32;
    %store/vec4 v000001c5ab8db4a0_0, 0, 32;
    %pushi/vec4 512, 0, 32;
    %store/vec4 v000001c5ab8e2700_0, 0, 32;
    %pushi/vec4 1, 0, 2;
    %store/vec4 v000001c5ab8d71b0_0, 0, 2;
    %pushi/vec4 4294967280, 0, 32;
    %store/vec4 v000001c5ab8daa40_0, 0, 32;
    %pushi/str "Usar data_mem_rd negativo";
    %store/str v000001c5ab8d7250_0;
    %fork TD_RUDataWrSrcMux_tb.check_result, S_000001c5ab8f0c30;
    %join;
    %vpi_call/w 3 95 "$display", "========== Test 6: adder_result PC+4 ==========" {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001c5ab8b3120_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001c5ab8db4a0_0, 0, 32;
    %pushi/vec4 260, 0, 32;
    %store/vec4 v000001c5ab8e2700_0, 0, 32;
    %pushi/vec4 2, 0, 2;
    %store/vec4 v000001c5ab8d71b0_0, 0, 2;
    %pushi/vec4 260, 0, 32;
    %store/vec4 v000001c5ab8daa40_0, 0, 32;
    %pushi/str "Usar adder_result PC+4";
    %store/str v000001c5ab8d7250_0;
    %fork TD_RUDataWrSrcMux_tb.check_result, S_000001c5ab8f0c30;
    %join;
    %vpi_call/w 3 100 "$display", "========== Test 7: alu_result valor grande ==========" {0 0 0};
    %pushi/vec4 2147483647, 0, 32;
    %store/vec4 v000001c5ab8b3120_0, 0, 32;
    %pushi/vec4 4096, 0, 32;
    %store/vec4 v000001c5ab8db4a0_0, 0, 32;
    %pushi/vec4 8192, 0, 32;
    %store/vec4 v000001c5ab8e2700_0, 0, 32;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v000001c5ab8d71b0_0, 0, 2;
    %pushi/vec4 2147483647, 0, 32;
    %store/vec4 v000001c5ab8daa40_0, 0, 32;
    %pushi/str "Usar alu_result grande";
    %store/str v000001c5ab8d7250_0;
    %fork TD_RUDataWrSrcMux_tb.check_result, S_000001c5ab8f0c30;
    %join;
    %vpi_call/w 3 105 "$display", "========== Test 8: Todos cero, seleccionar data_mem_rd ==========" {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001c5ab8b3120_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001c5ab8db4a0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001c5ab8e2700_0, 0, 32;
    %pushi/vec4 1, 0, 2;
    %store/vec4 v000001c5ab8d71b0_0, 0, 2;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001c5ab8daa40_0, 0, 32;
    %pushi/str "Todos cero";
    %store/str v000001c5ab8d7250_0;
    %fork TD_RUDataWrSrcMux_tb.check_result, S_000001c5ab8f0c30;
    %join;
    %vpi_call/w 3 110 "$display", "========================================" {0 0 0};
    %vpi_call/w 3 111 "$display", "=== Resumen de la simulacion ===" {0 0 0};
    %vpi_call/w 3 112 "$display", "Tests ejecutados: %0d", v000001c5ab94c8b0_0 {0 0 0};
    %load/vec4 v000001c5ab94c8b0_0;
    %load/vec4 v000001c5ab8e4480_0;
    %sub;
    %vpi_call/w 3 113 "$display", "Tests exitosos: %0d", S<0,vec4,s32> {1 0 0};
    %vpi_call/w 3 114 "$display", "Errores: %0d", v000001c5ab8e4480_0 {0 0 0};
    %vpi_call/w 3 115 "$display", "========================================" {0 0 0};
    %load/vec4 v000001c5ab8e4480_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_4.0, 4;
    %vpi_call/w 3 118 "$display", "Todos los tests pasaron exitosamente" {0 0 0};
    %jmp T_4.1;
T_4.0 ;
    %vpi_call/w 3 120 "$display", "Se encontraron %0d errores", v000001c5ab8e4480_0 {0 0 0};
T_4.1 ;
    %vpi_call/w 3 122 "$finish" {0 0 0};
    %end;
    .thread T_4;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "tb/RUDataWrSrcMux_tb.sv";
    "src/RUDataWrSrcMux.sv";
