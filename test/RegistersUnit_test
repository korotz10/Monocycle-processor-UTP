#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_0000015b90af2970 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0000015b909dbc80 .scope module, "RegistersUnit_tb" "RegistersUnit_tb" 3 1;
 .timescale 0 0;
v0000015b90b6dfe0_0 .var/s "DataWR", 31 0;
v0000015b90b6ebc0_0 .var "RUWr", 0 0;
v0000015b90b6e080_0 .var "clk", 0 0;
v0000015b90b6e300_0 .var/i "errors", 31 0;
v0000015b90b6e760_0 .var/s "rd", 4 0;
v0000015b90b6e580_0 .var/s "rs1", 4 0;
v0000015b90b6e8a0_0 .var/s "rs2", 4 0;
v0000015b90b6e940_0 .net/s "ru_rs1", 31 0, L_0000015b90b07a20;  1 drivers
v0000015b90b6ea80_0 .net/s "ru_rs2", 31 0, L_0000015b90b077f0;  1 drivers
v0000015b90b6e620_0 .var/i "tests", 31 0;
S_0000015b90af49a0 .scope module, "dut" "RegistersUnit" 3 13, 4 1 0, S_0000015b909dbc80;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 5 "rs1";
    .port_info 2 /INPUT 5 "rs2";
    .port_info 3 /INPUT 5 "rd";
    .port_info 4 /INPUT 32 "DataWR";
    .port_info 5 /INPUT 1 "RUWr";
    .port_info 6 /OUTPUT 32 "ru_rs1";
    .port_info 7 /OUTPUT 32 "ru_rs2";
L_0000015b90b07a20 .functor BUFZ 32, L_0000015b90b6e1c0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0000015b90b077f0 .functor BUFZ 32, L_0000015b90b6ec60, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0000015b90af2010_0 .net/s "DataWR", 31 0, v0000015b90b6dfe0_0;  1 drivers
v0000015b909db6b0_0 .net "RUWr", 0 0, v0000015b90b6ebc0_0;  1 drivers
v0000015b90b0ef00_0 .net *"_ivl_0", 31 0, L_0000015b90b6e1c0;  1 drivers
v0000015b90ac33d0_0 .net/s *"_ivl_2", 6 0, L_0000015b90b6e800;  1 drivers
v0000015b90ae9330_0 .net *"_ivl_6", 31 0, L_0000015b90b6ec60;  1 drivers
v0000015b90ac3760_0 .net/s *"_ivl_8", 6 0, L_0000015b90b6e3a0;  1 drivers
v0000015b90b09b40_0 .net "clk", 0 0, v0000015b90b6e080_0;  1 drivers
v0000015b90b180f0_0 .net/s "rd", 4 0, v0000015b90b6e760_0;  1 drivers
v0000015b90af1810_0 .net/s "rs1", 4 0, v0000015b90b6e580_0;  1 drivers
v0000015b90af4b30_0 .net/s "rs2", 4 0, v0000015b90b6e8a0_0;  1 drivers
v0000015b90af4f00 .array/s "ru", 0 31, 31 0;
v0000015b90ac2ce0_0 .net/s "ru_rs1", 31 0, L_0000015b90b07a20;  alias, 1 drivers
v0000015b90ac2d80_0 .net/s "ru_rs2", 31 0, L_0000015b90b077f0;  alias, 1 drivers
E_0000015b90b11830 .event posedge, v0000015b90b09b40_0;
L_0000015b90b6e1c0 .array/port v0000015b90af4f00, L_0000015b90b6e800;
L_0000015b90b6e800 .extend/s 7, v0000015b90b6e580_0;
L_0000015b90b6ec60 .array/port v0000015b90af4f00, L_0000015b90b6e3a0;
L_0000015b90b6e3a0 .extend/s 7, v0000015b90b6e8a0_0;
S_0000015b90ac2e20 .scope task, "read_register" "read_register" 3 52, 3 52 0, S_0000015b909dbc80;
 .timescale 0 0;
v0000015b90b6e9e0_0 .var "expected", 31 0;
v0000015b90b6eb20_0 .var "reg_addr", 4 0;
TD_RegistersUnit_tb.read_register ;
    %wait E_0000015b90b11830;
    %load/vec4 v0000015b90b6eb20_0;
    %store/vec4 v0000015b90b6e580_0, 0, 5;
    %delay 1, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000015b90b6e620_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000015b90b6e620_0, 0, 32;
    %vpi_call/w 3 57 "$display", "Lectura R%0d:", v0000015b90b6eb20_0 {0 0 0};
    %vpi_call/w 3 58 "$display", "  Esperado = 0x%h (%b)", v0000015b90b6e9e0_0, v0000015b90b6e9e0_0 {0 0 0};
    %vpi_call/w 3 59 "$display", "  Obtenido = 0x%h (%b)", v0000015b90b6e940_0, v0000015b90b6e940_0 {0 0 0};
    %load/vec4 v0000015b90b6e940_0;
    %load/vec4 v0000015b90b6e9e0_0;
    %cmp/ne;
    %jmp/0xz  T_0.0, 6;
    %vpi_call/w 3 61 "$display", "  ERROR: No coincide" {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000015b90b6e300_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000015b90b6e300_0, 0, 32;
    %jmp T_0.1;
T_0.0 ;
    %vpi_call/w 3 64 "$display", "  OK" {0 0 0};
T_0.1 ;
    %vpi_call/w 3 66 "$display", "\000" {0 0 0};
    %end;
S_0000015b90ac2fb0 .scope task, "read_two_registers" "read_two_registers" 3 70, 3 70 0, S_0000015b909dbc80;
 .timescale 0 0;
v0000015b90b6dea0_0 .var "exp1", 31 0;
v0000015b90b6de00_0 .var "exp2", 31 0;
v0000015b90b6e120_0 .var "reg1", 4 0;
v0000015b90b6dd60_0 .var "reg2", 4 0;
TD_RegistersUnit_tb.read_two_registers ;
    %wait E_0000015b90b11830;
    %load/vec4 v0000015b90b6e120_0;
    %store/vec4 v0000015b90b6e580_0, 0, 5;
    %load/vec4 v0000015b90b6dd60_0;
    %store/vec4 v0000015b90b6e8a0_0, 0, 5;
    %delay 1, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000015b90b6e620_0;
    %pushi/vec4 2, 0, 32;
    %add;
    %store/vec4 v0000015b90b6e620_0, 0, 32;
    %vpi_call/w 3 77 "$display", "Lectura simultanea R%0d y R%0d:", v0000015b90b6e120_0, v0000015b90b6dd60_0 {0 0 0};
    %vpi_call/w 3 78 "$display", "  R%0d: Esperado = 0x%h, Obtenido = 0x%h", v0000015b90b6e120_0, v0000015b90b6dea0_0, v0000015b90b6e940_0 {0 0 0};
    %load/vec4 v0000015b90b6e940_0;
    %load/vec4 v0000015b90b6dea0_0;
    %cmp/ne;
    %jmp/0xz  T_1.2, 6;
    %vpi_call/w 3 80 "$display", "       ERROR en R%0d", v0000015b90b6e120_0 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000015b90b6e300_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000015b90b6e300_0, 0, 32;
    %jmp T_1.3;
T_1.2 ;
    %vpi_call/w 3 83 "$display", "       OK R%0d", v0000015b90b6e120_0 {0 0 0};
T_1.3 ;
    %vpi_call/w 3 86 "$display", "  R%0d: Esperado = 0x%h, Obtenido = 0x%h", v0000015b90b6dd60_0, v0000015b90b6de00_0, v0000015b90b6ea80_0 {0 0 0};
    %load/vec4 v0000015b90b6ea80_0;
    %load/vec4 v0000015b90b6de00_0;
    %cmp/ne;
    %jmp/0xz  T_1.4, 6;
    %vpi_call/w 3 88 "$display", "       ERROR en R%0d", v0000015b90b6dd60_0 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000015b90b6e300_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000015b90b6e300_0, 0, 32;
    %jmp T_1.5;
T_1.4 ;
    %vpi_call/w 3 91 "$display", "       OK R%0d", v0000015b90b6dd60_0 {0 0 0};
T_1.5 ;
    %vpi_call/w 3 93 "$display", "\000" {0 0 0};
    %end;
S_0000015b90b1a1f0 .scope task, "write_register" "write_register" 3 41, 3 41 0, S_0000015b909dbc80;
 .timescale 0 0;
v0000015b90b6df40_0 .var "data", 31 0;
v0000015b90b6e260_0 .var "reg_addr", 4 0;
TD_RegistersUnit_tb.write_register ;
    %wait E_0000015b90b11830;
    %load/vec4 v0000015b90b6e260_0;
    %store/vec4 v0000015b90b6e760_0, 0, 5;
    %load/vec4 v0000015b90b6df40_0;
    %store/vec4 v0000015b90b6dfe0_0, 0, 32;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000015b90b6ebc0_0, 0, 1;
    %wait E_0000015b90b11830;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000015b90b6ebc0_0, 0, 1;
    %vpi_call/w 3 48 "$display", "Escritura: R%0d = 0x%h (%b)", v0000015b90b6e260_0, v0000015b90b6df40_0, v0000015b90b6df40_0 {0 0 0};
    %end;
    .scope S_0000015b90af49a0;
T_3 ;
    %pushi/vec4 512, 0, 32;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0000015b90af4f00, 4, 0;
    %end;
    .thread T_3;
    .scope S_0000015b90af49a0;
T_4 ;
    %wait E_0000015b90b11830;
    %load/vec4 v0000015b909db6b0_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_4.2, 9;
    %load/vec4 v0000015b90b180f0_0;
    %pad/s 32;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_4.2;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %load/vec4 v0000015b90af2010_0;
    %load/vec4 v0000015b90b180f0_0;
    %pad/s 7;
    %ix/vec4/s 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0000015b90af4f00, 0, 4;
T_4.0 ;
    %jmp T_4;
    .thread T_4;
    .scope S_0000015b909dbc80;
T_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000015b90b6e300_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000015b90b6e620_0, 0, 32;
    %end;
    .thread T_5, $init;
    .scope S_0000015b909dbc80;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000015b90b6e080_0, 0, 1;
T_6.0 ;
    %delay 5, 0;
    %load/vec4 v0000015b90b6e080_0;
    %inv;
    %store/vec4 v0000015b90b6e080_0, 0, 1;
    %jmp T_6.0;
    %end;
    .thread T_6;
    .scope S_0000015b909dbc80;
T_7 ;
    %vpi_call/w 3 36 "$dumpfile", "RegistersUnit_tb.vcd" {0 0 0};
    %vpi_call/w 3 37 "$dumpvars", 32'sb00000000000000000000000000000000, S_0000015b909dbc80 {0 0 0};
    %end;
    .thread T_7;
    .scope S_0000015b909dbc80;
T_8 ;
    %pushi/vec4 0, 0, 5;
    %store/vec4 v0000015b90b6e580_0, 0, 5;
    %pushi/vec4 0, 0, 5;
    %store/vec4 v0000015b90b6e8a0_0, 0, 5;
    %pushi/vec4 0, 0, 5;
    %store/vec4 v0000015b90b6e760_0, 0, 5;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000015b90b6dfe0_0, 0, 32;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000015b90b6ebc0_0, 0, 1;
    %vpi_call/w 3 105 "$display", "========================================" {0 0 0};
    %vpi_call/w 3 106 "$display", "=== Iniciando simulacion RegistersUnit ===" {0 0 0};
    %vpi_call/w 3 107 "$display", "========================================\012" {0 0 0};
    %pushi/vec4 3, 0, 32;
T_8.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_8.1, 5;
    %jmp/1 T_8.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0000015b90b11830;
    %jmp T_8.0;
T_8.1 ;
    %pop/vec4 1;
    %vpi_call/w 3 113 "$display", "========== Test 1: Verificar inicializacion ==========" {0 0 0};
    %pushi/vec4 2, 0, 5;
    %store/vec4 v0000015b90b6eb20_0, 0, 5;
    %pushi/vec4 512, 0, 32;
    %store/vec4 v0000015b90b6e9e0_0, 0, 32;
    %fork TD_RegistersUnit_tb.read_register, S_0000015b90ac2e20;
    %join;
    %vpi_call/w 3 117 "$display", "========== Test 2: Verificar R0 siempre es 0 ==========" {0 0 0};
    %pushi/vec4 0, 0, 5;
    %store/vec4 v0000015b90b6eb20_0, 0, 5;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000015b90b6e9e0_0, 0, 32;
    %fork TD_RegistersUnit_tb.read_register, S_0000015b90ac2e20;
    %join;
    %vpi_call/w 3 121 "$display", "========== Test 3: Intentar escribir en R0 ==========" {0 0 0};
    %pushi/vec4 0, 0, 5;
    %store/vec4 v0000015b90b6e260_0, 0, 5;
    %pushi/vec4 3735928559, 0, 32;
    %store/vec4 v0000015b90b6df40_0, 0, 32;
    %fork TD_RegistersUnit_tb.write_register, S_0000015b90b1a1f0;
    %join;
    %pushi/vec4 0, 0, 5;
    %store/vec4 v0000015b90b6eb20_0, 0, 5;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000015b90b6e9e0_0, 0, 32;
    %fork TD_RegistersUnit_tb.read_register, S_0000015b90ac2e20;
    %join;
    %vpi_call/w 3 126 "$display", "========== Test 4: Escribir en registros ==========" {0 0 0};
    %pushi/vec4 1, 0, 5;
    %store/vec4 v0000015b90b6e260_0, 0, 5;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0000015b90b6df40_0, 0, 32;
    %fork TD_RegistersUnit_tb.write_register, S_0000015b90b1a1f0;
    %join;
    %pushi/vec4 3, 0, 5;
    %store/vec4 v0000015b90b6e260_0, 0, 5;
    %pushi/vec4 20, 0, 32;
    %store/vec4 v0000015b90b6df40_0, 0, 32;
    %fork TD_RegistersUnit_tb.write_register, S_0000015b90b1a1f0;
    %join;
    %pushi/vec4 5, 0, 5;
    %store/vec4 v0000015b90b6e260_0, 0, 5;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0000015b90b6df40_0, 0, 32;
    %fork TD_RegistersUnit_tb.write_register, S_0000015b90b1a1f0;
    %join;
    %pushi/vec4 10, 0, 5;
    %store/vec4 v0000015b90b6e260_0, 0, 5;
    %pushi/vec4 305419896, 0, 32;
    %store/vec4 v0000015b90b6df40_0, 0, 32;
    %fork TD_RegistersUnit_tb.write_register, S_0000015b90b1a1f0;
    %join;
    %vpi_call/w 3 133 "$display", "========== Test 5: Leer valores escritos ==========" {0 0 0};
    %pushi/vec4 1, 0, 5;
    %store/vec4 v0000015b90b6eb20_0, 0, 5;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0000015b90b6e9e0_0, 0, 32;
    %fork TD_RegistersUnit_tb.read_register, S_0000015b90ac2e20;
    %join;
    %pushi/vec4 3, 0, 5;
    %store/vec4 v0000015b90b6eb20_0, 0, 5;
    %pushi/vec4 20, 0, 32;
    %store/vec4 v0000015b90b6e9e0_0, 0, 32;
    %fork TD_RegistersUnit_tb.read_register, S_0000015b90ac2e20;
    %join;
    %pushi/vec4 5, 0, 5;
    %store/vec4 v0000015b90b6eb20_0, 0, 5;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0000015b90b6e9e0_0, 0, 32;
    %fork TD_RegistersUnit_tb.read_register, S_0000015b90ac2e20;
    %join;
    %pushi/vec4 10, 0, 5;
    %store/vec4 v0000015b90b6eb20_0, 0, 5;
    %pushi/vec4 305419896, 0, 32;
    %store/vec4 v0000015b90b6e9e0_0, 0, 32;
    %fork TD_RegistersUnit_tb.read_register, S_0000015b90ac2e20;
    %join;
    %vpi_call/w 3 140 "$display", "========== Test 6: Sobrescribir registro ==========" {0 0 0};
    %vpi_call/w 3 141 "$display", "Escribiendo nuevo valor en R1" {0 0 0};
    %pushi/vec4 1, 0, 5;
    %store/vec4 v0000015b90b6e260_0, 0, 5;
    %pushi/vec4 255, 0, 32;
    %store/vec4 v0000015b90b6df40_0, 0, 32;
    %fork TD_RegistersUnit_tb.write_register, S_0000015b90b1a1f0;
    %join;
    %pushi/vec4 1, 0, 5;
    %store/vec4 v0000015b90b6eb20_0, 0, 5;
    %pushi/vec4 255, 0, 32;
    %store/vec4 v0000015b90b6e9e0_0, 0, 32;
    %fork TD_RegistersUnit_tb.read_register, S_0000015b90ac2e20;
    %join;
    %vpi_call/w 3 146 "$display", "========== Test 7: Lecturas simultaneas ==========" {0 0 0};
    %pushi/vec4 1, 0, 5;
    %store/vec4 v0000015b90b6e120_0, 0, 5;
    %pushi/vec4 3, 0, 5;
    %store/vec4 v0000015b90b6dd60_0, 0, 5;
    %pushi/vec4 255, 0, 32;
    %store/vec4 v0000015b90b6dea0_0, 0, 32;
    %pushi/vec4 20, 0, 32;
    %store/vec4 v0000015b90b6de00_0, 0, 32;
    %fork TD_RegistersUnit_tb.read_two_registers, S_0000015b90ac2fb0;
    %join;
    %pushi/vec4 5, 0, 5;
    %store/vec4 v0000015b90b6e120_0, 0, 5;
    %pushi/vec4 10, 0, 5;
    %store/vec4 v0000015b90b6dd60_0, 0, 5;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0000015b90b6dea0_0, 0, 32;
    %pushi/vec4 305419896, 0, 32;
    %store/vec4 v0000015b90b6de00_0, 0, 32;
    %fork TD_RegistersUnit_tb.read_two_registers, S_0000015b90ac2fb0;
    %join;
    %vpi_call/w 3 151 "$display", "========== Test 8: Escribir sin RUWr (no debe escribir) ==========" {0 0 0};
    %wait E_0000015b90b11830;
    %pushi/vec4 7, 0, 5;
    %store/vec4 v0000015b90b6e760_0, 0, 5;
    %pushi/vec4 3131961357, 0, 32;
    %store/vec4 v0000015b90b6dfe0_0, 0, 32;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000015b90b6ebc0_0, 0, 1;
    %wait E_0000015b90b11830;
    %vpi_call/w 3 157 "$display", "Intento de escritura en R7 sin RUWr" {0 0 0};
    %pushi/vec4 7, 0, 5;
    %store/vec4 v0000015b90b6eb20_0, 0, 5;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000015b90b6e9e0_0, 0, 32;
    %fork TD_RegistersUnit_tb.read_register, S_0000015b90ac2e20;
    %join;
    %vpi_call/w 3 161 "$display", "========== Test 9: Escribir en R15 ==========" {0 0 0};
    %pushi/vec4 15, 0, 5;
    %store/vec4 v0000015b90b6e260_0, 0, 5;
    %pushi/vec4 3405691582, 0, 32;
    %store/vec4 v0000015b90b6df40_0, 0, 32;
    %fork TD_RegistersUnit_tb.write_register, S_0000015b90b1a1f0;
    %join;
    %pushi/vec4 15, 0, 5;
    %store/vec4 v0000015b90b6eb20_0, 0, 5;
    %pushi/vec4 3405691582, 0, 32;
    %store/vec4 v0000015b90b6e9e0_0, 0, 32;
    %fork TD_RegistersUnit_tb.read_register, S_0000015b90ac2e20;
    %join;
    %vpi_call/w 3 166 "$display", "========== Test 10: Registros en los limites ==========" {0 0 0};
    %pushi/vec4 31, 0, 5;
    %store/vec4 v0000015b90b6e260_0, 0, 5;
    %pushi/vec4 4294901760, 0, 32;
    %store/vec4 v0000015b90b6df40_0, 0, 32;
    %fork TD_RegistersUnit_tb.write_register, S_0000015b90b1a1f0;
    %join;
    %pushi/vec4 31, 0, 5;
    %store/vec4 v0000015b90b6eb20_0, 0, 5;
    %pushi/vec4 4294901760, 0, 32;
    %store/vec4 v0000015b90b6e9e0_0, 0, 32;
    %fork TD_RegistersUnit_tb.read_register, S_0000015b90ac2e20;
    %join;
    %vpi_call/w 3 171 "$display", "========== Test 11: Valores negativos ==========" {0 0 0};
    %pushi/vec4 20, 0, 5;
    %store/vec4 v0000015b90b6e260_0, 0, 5;
    %pushi/vec4 4294967280, 0, 32;
    %store/vec4 v0000015b90b6df40_0, 0, 32;
    %fork TD_RegistersUnit_tb.write_register, S_0000015b90b1a1f0;
    %join;
    %pushi/vec4 20, 0, 5;
    %store/vec4 v0000015b90b6eb20_0, 0, 5;
    %pushi/vec4 4294967280, 0, 32;
    %store/vec4 v0000015b90b6e9e0_0, 0, 32;
    %fork TD_RegistersUnit_tb.read_register, S_0000015b90ac2e20;
    %join;
    %vpi_call/w 3 176 "$display", "========================================" {0 0 0};
    %vpi_call/w 3 177 "$display", "=== Resumen de la simulacion ===" {0 0 0};
    %vpi_call/w 3 178 "$display", "Tests ejecutados: %0d", v0000015b90b6e620_0 {0 0 0};
    %load/vec4 v0000015b90b6e620_0;
    %load/vec4 v0000015b90b6e300_0;
    %sub;
    %vpi_call/w 3 179 "$display", "Tests exitosos: %0d", S<0,vec4,s32> {1 0 0};
    %vpi_call/w 3 180 "$display", "Errores: %0d", v0000015b90b6e300_0 {0 0 0};
    %vpi_call/w 3 181 "$display", "========================================" {0 0 0};
    %load/vec4 v0000015b90b6e300_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_8.2, 4;
    %vpi_call/w 3 184 "$display", "Todos los tests pasaron exitosamente" {0 0 0};
    %jmp T_8.3;
T_8.2 ;
    %vpi_call/w 3 186 "$display", "Se encontraron %0d errores", v0000015b90b6e300_0 {0 0 0};
T_8.3 ;
    %pushi/vec4 5, 0, 32;
T_8.4 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_8.5, 5;
    %jmp/1 T_8.5, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0000015b90b11830;
    %jmp T_8.4;
T_8.5 ;
    %pop/vec4 1;
    %vpi_call/w 3 190 "$finish" {0 0 0};
    %end;
    .thread T_8;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "RegistersUnit_tb.sv";
    "RegistersUnit.sv";
